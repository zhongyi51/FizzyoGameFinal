using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Planetrun : MonoBehaviour {
    private Rigidbody2D mars2d;
    private Rigidbody2D jup2d;
    private Rigidbody2D sat2d;
    private Rigidbody2D ur2d;
    private Rigidbody2D nep2d;

    public Text marsMessage;
    public Text jupMessage;
    public Text satMessage;
    public Text urMessage;
    public Text nepMessage;

    private float startTime;

    private float marsTime = 10f;
    private float jupTime = 30f;
    private float satTime = 50f;
    private float urTime = 70f;
    private float nepTime = 90f;

    private bool marsSpawned = false;
    private bool jupSpawned = false;
    private bool satSpawned = false;
    private bool urSpawned = false;
    private bool nepSpawned = false;

    public float textTime;

    private GameObject text;

	// Use this for initialization
	void Start () {
        startTime = Time.time;
        mars2d = GameObject.FindGameObjectWithTag("Mars").GetComponent<Rigidbody2D>();
        jup2d = GameObject.FindGameObjectWithTag("Jupiter").GetComponent<Rigidbody2D>();
        sat2d = GameObject.FindGameObjectWithTag("Saturn").GetComponent<Rigidbody2D>();
        ur2d = GameObject.FindGameObjectWithTag("Uranus").GetComponent<Rigidbody2D>();
        nep2d = GameObject.FindGameObjectWithTag("Neptune").GetComponent<Rigidbody2D>();
    }
	
	// Update is called once per frame
	void Update () {
        if (Time.time - startTime > marsTime && marsSpawned == false)
        {
            spawnMars();
        }
        if (Time.time - startTime > jupTime && jupSpawned == false)
        {
            spawnJupiter();
        }
    }

    void spawnMars()
    {
        textTime = Time.time;
        mars2d.velocity = new Vector2(GameController.instance.rockspeed / 2, 0);
        marsSpawned = true;
        marsMessage = GameObject.FindGameObjectWithTag("marsText").GetComponent<Text>();
        if (text != null)
        {
            print("true");

            while (Time.time - textTime < 5)
            {
                marsMessage.text = "Congratulations, you've reached Mars!";
            }

        }
    }
    void spawnJupiter()
    {
        textTime = Time.time;
        jup2d.velocity = new Vector2(GameController.instance.rockspeed / 2, 0);
        jupSpawned = true;
        //jupMessage = GameObject.FindGameObjectWithTag("jupText").GetComponent<Text>();
        if (text != null)
        {
            print("true");

            while (Time.time - textTime < 5)
            {
                marsMessage.text = "Congratulations, you've reached Jupiter!";
            }

        }
    }
    void spawnSaturn()
    {
        textTime = Time.time;
        sat2d.velocity = new Vector2(GameController.instance.rockspeed / 2, 0);
        satSpawned = true;
        //jupMessage = GameObject.FindGameObjectWithTag("jupText").GetComponent<Text>();
        if (text != null)
        {
            print("true");

            while (Time.time - textTime < 5)
            {
                marsMessage.text = "Congratulations, you've reached Jupiter!";
            }

        }
    }
    void spawnUranus()
    {
        textTime = Time.time;
        ur2d.velocity = new Vector2(GameController.instance.rockspeed / 2, 0);
        urSpawned = true;
        //jupMessage = GameObject.FindGameObjectWithTag("jupText").GetComponent<Text>();
        if (text != null)
        {
            print("true");

            while (Time.time - textTime < 5)
            {
                marsMessage.text = "Congratulations, you've reached Jupiter!";
            }

        }
    }
    void spawnNeptune()
    {
        textTime = Time.time;
        nep2d.velocity = new Vector2(GameController.instance.rockspeed / 2, 0);
        nepSpawned = true;
        //jupMessage = GameObject.FindGameObjectWithTag("jupText").GetComponent<Text>();
        if (text != null)
        {
            print("true");

            while (Time.time - textTime < 5)
            {
                marsMessage.text = "Congratulations, you've reached Jupiter!";
            }

        }
    }

    void planetCheck()
    {
        if (Time.time - startTime > marsTime && marsSpawned == false)
        {
            spawnMars();
        }
        if (Time.time - startTime > jupTime && jupSpawned == false)
        {
            spawnJupiter();
        }
        if (Time.time - startTime > satTime && satSpawned == false)
        {
            spawnSaturn();
        }
        if (Time.time - startTime > urTime && urSpawned == false)
        {
            spawnUranus();
        }
        if (Time.time - startTime > nepTime && nepSpawned == false)
        {
            spawnNeptune();
        }

    }
}
